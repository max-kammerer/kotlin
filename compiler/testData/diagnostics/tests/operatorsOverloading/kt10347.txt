package

public fun getX(): X
public fun test(/*0*/ plus: kotlin.Int.(kotlin.String) -> kotlin.Unit): kotlin.Unit
public fun test2(/*0*/ foo: Foo, /*1*/ set: Foo.(kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Unit
public fun test3(): kotlin.Unit
public fun test4(/*0*/ inf: kotlin.Int.(kotlin.Int) -> kotlin.Unit): kotlin.Unit

public final class Foo {
    public constructor Foo()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class X {
    public constructor X()
    public final val component1: Y
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Y {
    public constructor Y()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun invoke(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
